---
- name: add a login middleware
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: Middleware
      metadata:
        name: traefik-auth
      spec:
        basicAuth:
          secret: traefik-login
- name: add a certificate for traefiks dashboard
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: traefik.nav.tum.sexy
      spec:
        commonName: traefik.nav.tum.sexy
        dnsNames:
          - traefik.nav.tum.sexy
        secretName: traefik.nav.tum.sexy
        issuerRef:
          name: letsencrypt-production
          kind: ClusterIssuer
- name: add a redirect-to-dashboard middleware
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: Middleware
      metadata:
        name: redirect-to-dashboard
      spec:
        redirectRegex:
          regex: ^https?://traefik.nav.tum.sexy/(.*)
          replacement: https://traefik.nav.tum.sexy/dashboard/
- name: add an ingress for traefiks dashboard (1/2)
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: traefik-dashboard
      spec:
        entryPoints:
          - web
        routes:
          - match: Host(`traefik.nav.tum.sexy`)
            kind: Rule
            services:
              - name: noop@internal
                kind: TraefikService
            middlewares:
              - name: redirect-to-dashboard
- name: add an ingress for traefiks dashboard (2/2)
  kubernetes.core.k8s:
    state: present
    namespace: kube-system
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: traefik-dashboard-http
      spec:
        entryPoints:
          - websecure
        routes:
          - match: Host(`traefik.nav.tum.sexy`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))
            kind: Rule
            priority: 10
            services:
              - name: api@internal
                kind: TraefikService
            middlewares:
              - name: traefik-auth
          - match: Host(`traefik.nav.tum.sexy`)
            kind: Rule
            priority: 9
            services:
              - name: noop@internal
                kind: TraefikService
            middlewares:
              - name: redirect-to-dashboard
        tls:
          secretName: traefik.nav.tum.sexy
