---
- name: Add prometheus-community chart repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "https://prometheus-community.github.io/helm-charts"

- name: add an thanos secret
  kubernetes.core.k8s:
    state: present
    namespace: monitoring
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: thanos
      type: Opaque
      data:
        thanos.yaml: "{{ lookup('ansible.builtin.password', 'credentials/promehteus/thanos.yaml') | b64encode }}"

- name: Install prometheus
  kubernetes.core.helm:
    atomic: true
    wait: false
    update_repo_cache: yes
    release_state: present
    chart_version: 45.26.0
    chart_ref: prometheus-community/kube-prometheus-stack
    name: prometheus
    namespace: monitoring
    create_namespace: yes
    values:
      fullnameOverride: prometheus
      alertmanager:
        podDisruptionBudget:
          enabled: true
        alertmanagerSpec:
          storage:
            volumeClaimTemplate:
              spec:
                storageClassName: longhorn
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 5Gi
          podAntiAffinity: soft
          resources:
            requests:
              memory: 400Mi
      grafana:
        enabled: false
      kube-state-metrics:
        autosharding:
          enabled: true
      prometheusOperator:
        admissionWebhooks:
          certManager: # self-signed root certificate
            enabled: false
            issuerRef:
              name: "selfsigned"
              kind: "ClusterIssuer"
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
      prometheus:
        podDisruptionBudget:
          enabled: true
        prometheusSpec:
          podAntiAffinity: "soft"
          shards: 1
          replicas: 1
          storageSpec:
            volumeClaimTemplate:
              spec:
                storageClassName: longhorn
                accessModes: ["ReadWriteOnce"]
                resources:
                  requests:
                    storage: 40Gi
          #thanos:
          #  image: quay.io/thanos/thanos:v0.30.2
          resources:
            requests:
              memory: 8Gi
      #thanosImage:
      #  registry: quay.io
      #  repository: thanos/thanos
      #  tag: v0.30.2
      thanosRuler:
        enabled: false
        objectStorageConfig:
          key: thanos.yaml
          name: thanos
        podDisruptionBudget:
          enabled: true
        thanosRulerSpec:
          storage:
            storageClassName: longhorn
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi
        resources:
          requests:
            memory: 400Mi
      cleanPrometheusOperatorObjectNames: true
