---
- name: Add grafana chart repo
  kubernetes.core.helm_repository:
    name: grafana
    repo_url: "https://grafana.github.io/helm-charts"

- name: Install grafana
  kubernetes.core.helm:
    atomic: true
    wait: false
    update_repo_cache: yes
    release_state: present
    chart_version: 6.56.2
    chart_ref: grafana/grafana
    name: grafana
    namespace: monitoring
    create_namespace: yes
    values:
      grafana.ini:
        server:
          domain: "grafana.nav.tum.sexy"
          root_url: "https://%(domain)s"
        auth.basic:
          enabled: true
        auth.github:
          enabled: true
          allow_sign_up: true
          auto_login: false
          client_id: "{{ lookup('ansible.builtin.password', 'credentials/argocd/github_clientID') | b64encode }}"
          client_secret: "{{ lookup('ansible.builtin.password', 'credentials/argocd/github_clientSecret') | b64encode }}"
          scopes: user:email,read:org
          auth_url: https://github.com/login/oauth/authorize
          token_url: https://github.com/login/oauth/access_token
          api_url: https://api.github.com/user
          team_ids: navigatum
          allowed_organizations: tum-dev
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
            - name: Prometheus
              type: prometheus
              access: proxy
              url: http://prometheus-operated.monitoring.svc.cluster.local:9090
              isDefault: true
              prometheusType: Prometheus
              prometheusVersion: 2.40.x
            - name: Loki
              type: loki
              access: proxy
              url: http://loki-query-frontend.monitoring.svc.cluster.local:3100
              jsonData:
                maxLines: 1000
      persistence:
        enabled: true
        storageClassName: longhorn
        size: 4Gi
- name: Make shure grafana has an ingress
  kubernetes.core.k8s:
    state: present
    namespace: monitoring
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: grafana
        namespace: monitoring
      spec:
        entryPoints:
          - websecure
        routes:
          - kind: Rule
            match: Host(`grafana.nav.tum.sexy`)
            priority: 12
            services:
              - name: grafana
                port: 80
        tls:
          secretName: grafana.nav.tum.sexy
- name: Make shure grafana has an http-ingress
  kubernetes.core.k8s:
    state: present
    namespace: monitoring
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: grafana-http
        namespace: monitoring
      spec:
        entryPoints:
          - web
        routes:
          - kind: Rule
            match: Host(`grafana.nav.tum.sexy`)
            middlewares:
              - name: https
            services:
              - kind: TraefikService
                name: noop@internal
- name: Make shure grafana has an http redirect
  kubernetes.core.k8s:
    state: present
    namespace: monitoring
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: Middleware
      metadata:
        name: https
        namespace: monitoring
      spec:
        redirectScheme:
          scheme: https
          permanent: true

- name: Make shure grafana has an cert
  kubernetes.core.k8s:
    state: present
    namespace: monitoring
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: grafana.nav.tum.sexy
        namespace: monitoring
      spec:
        commonName: grafana.nav.tum.sexy
        dnsNames:
          - grafana.nav.tum.sexy
        secretName: grafana.nav.tum.sexy
        issuerRef:
          name: letsencrypt-production
          kind: ClusterIssuer
