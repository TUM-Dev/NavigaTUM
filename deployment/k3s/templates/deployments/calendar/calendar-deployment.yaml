apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar
  labels:
    app.kubernetes.io/part-of: navigatum
    app.kubernetes.io/name: calendar
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: navigatum
      app.kubernetes.io/name: calendar
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: navigatum
        app.kubernetes.io/name: calendar
      {{- if eq "nav.tum.de" $.Values.url }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '8060'
        prometheus.io/scrape: 'true'
      {{- end }}
    spec:
      priorityClassName: {{ $.Values.url }}
      containers:
        - name: calendar
          image: "ghcr.io/tum-dev/navigatum-calendar:{{ $.Values.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8060
              name: calendar
          env:
            - name: POSTGRES_URL
              value: postgres-rw.navigatum.svc.cluster.local
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-db-secret
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-db-secret
                  key: password
          securityContext:
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              memory: 500Mi
          livenessProbe:
            httpGet:
              path: /api/calendar/status
              port: calendar
            failureThreshold: 2
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /api/calendar/status
              port: calendar
            failureThreshold: 60
            periodSeconds: 1
