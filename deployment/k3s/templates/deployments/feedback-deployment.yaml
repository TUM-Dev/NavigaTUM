apiVersion: apps/v1
kind: Deployment
metadata:
  name: feedback
  labels:
    app.kubernetes.io/part-of: navigatum
    app.kubernetes.io/name: feedback
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/part-of: navigatum
      app.kubernetes.io/name: feedback
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: navigatum
        app.kubernetes.io/name: feedback
      {{- if $.Values.is_production }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '8070'
        prometheus.io/scrape: 'true'
      {{- end }}
    spec:
      affinity: # no two pods on the same node
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - navigatum
              - key: deployment
                operator: In
                values:
                - feedback
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: feedback
          image: "ghcr.io/tum-dev/navigatum-feedback:{{ $.Values.tag }}"
          imagePullPolicy: Always
          {{ if or (.Values.server.GITHUB_TOKEN) (.Values.server.JWT_KEY) }}
          envFrom:
            - secretRef:
                name: feedback-api-keys # GITHUB_TOKEN, JWT_KEY
          {{ end }}
          ports:
            - containerPort: 8070
              name: feedback
          securityContext:
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
            limits:
              memory: 40Mi
          livenessProbe:
            httpGet:
              path: /api/feedback/status
              port: feedback
            failureThreshold: 2
            periodSeconds: 1
          startupProbe:
            httpGet:
              path: /api/feedback/status
              port: feedback
            failureThreshold: 6
            periodSeconds: 1
{{ if or (.Values.server.GITHUB_TOKEN) (.Values.server.JWT_KEY) }}
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: feedback-api-keys
  namespace: {{ $.Values.namespace }}
  labels:
    app.kubernetes.io/part-of: navigatum
    app.kubernetes.io/name: feedback
data:
  {{ if $.Values.server.GITHUB_TOKEN }}
    GITHUB_TOKEN: {{ $.Values.server.GITHUB_TOKEN }}
  {{ end }}
  {{ if $.Values.server.JWT_KEY }}
    JWT_KEY: {{ $.Values.server.JWT_KEY }}
  {{ end }}
{{ end }}
