apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: calendar
  labels:
    app: navigatum
    deployment: calendar
  namespace: {{ $.Values.namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: navigatum
      deployment: calendar
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: navigatum
        deployment: calendar
      {{- if eq "nav.tum.de" $.Values.url }}
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: '8060'
        prometheus.io/scrape: 'true'
      {{- end }}
    spec:
      volumes:
        - name: tmp-calendar
          emptyDir: {}
      containers:
        - name: calendar
          image: "ghcr.io/tum-dev/navigatum-calendar:{{ $.Values.tag }}"
          imagePullPolicy: Always
          ports:
            - containerPort: 8060
              name: calendar
          env:
            - name: DB_LOCATION
              value: /tmp/server.db
          securityContext:
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: 10m
              memory: 200Mi
            limits:
              memory: 500Mi
          livenessProbe:
            httpGet:
              path: /api/calendar/status
              port: calendar
            failureThreshold: 2
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /api/calendar/status
              port: calendar
            failureThreshold: 60
            periodSeconds: 1
