apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress
  labels:
    app: navigatum
  namespace: {{ .Values.namespace }}
spec:
  entryPoints:
    - websecure
  routes:
    # temproary workaround for traefik bug (interoperability with ingress)
    - kind: Rule
      match: Host(`{{ .Values.url }}`) && PathPrefix(`/.well-known/acme-challenge/`)
      priority: 13
      services:
        - name: cm-acme-http-solver-4xsc9
          port: 8089
          kind: Service
    - kind: Rule
      match: Host(`{{ .Values.url }}`) && PathPrefix(`/api/`)
      priority: 12
      services:
        - name: api-svc
          port: 7000
    - kind: Rule
      match: Host(`{{ .Values.url }}`) && PathPrefix(`/maps/`)
      priority: 11
      services:
        - name: maps-svc
          port: 7770
      middlewares:
        - name: stripprefix
    - kind: Rule
      match: Host(`{{ .Values.url }}`) && PathPrefix(`/cdn/`)
      priority: 10
      services:
        - name: cdn-svc
          port: 8000
    - kind: Rule
      match: Host(`{{ .Values.url }}`) && PathPrefix(`/rendertron/`)
      priority: 9
      services:
        - name: webclient-svc
          port: 9100
      middlewares:
        - name: stripprefix
    - kind: Rule
      match: Host(`{{ .Values.url }}`)
      priority: 8
      services:
        - name: webclient-svc
          port: 9000
  tls:
    secretName: {{ .Values.url }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: ingress-http
  labels:
    app: navigatum
  namespace: {{ .Values.namespace }}
spec:
  entryPoints:
    - web
  routes:
    # temproary workaround for traefik bug (interoperability with ingress)
    - kind: Rule
      match: Host(`{{ .Values.url }}`) && PathPrefix(`/.well-known/acme-challenge/`)
      priority: 12
      services:
        - name: cm-acme-http-solver-4xsc9
          port: 8089
          kind: Service
    - kind: Rule
      match: Host(`{{ .Values.url }}`)
      priority: 9
      services:
        - name: noop@internal
          kind: TraefikService
      middlewares:
        - name: https
