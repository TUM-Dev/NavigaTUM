name: data CD

on:
  push:
  workflow_dispatch:

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Set job outputs to values from filter step
    outputs:
      data: ${{ steps.filter.outputs.data }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # the server is required in data, since apparently it is impossibly to schedule a job after another in GitHub
          filters: |
            data:
              - '.github/**'
              - 'data/**'
  data-build:
    needs:
      - changes
    if: ${{ needs.changes.outputs.data == 'true' }}
    uses: ./.github/workflows/docker-build.yml
    with:
      image_suffix: data
      context: ./data
      dockerfile: Dockerfile
    permissions:
      contents: read
      packages: write
  data-deployment:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - data-build
    steps:
      - run: curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 && chmod +x /usr/local/bin/argocd
      - run: argocd app actions run navigatum-prod restart --kind Deployment --resource-name data --auth-token ${{ secrets.ARGOCD_TOKEN }} --server ${{ secrets.ARGOCD_SERVER }}
  data-staging-deployment:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - data-build
    steps:
      - run: curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64 && chmod +x /usr/local/bin/argocd
      - run: argocd app actions run pr-${{github.event.number}} restart --kind Deployment --resource-name data --auth-token ${{ secrets.ARGOCD_TOKEN }} --server ${{ secrets.ARGOCD_SERVER }}