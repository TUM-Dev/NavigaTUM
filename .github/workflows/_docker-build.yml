name: Create and publish a Docker image

on:
  workflow_call:
    inputs:
      image_suffix:
        required: true
        description: Suffix of generated dockerimages' name
        type: string
      context:
        required: true
        description: Context, docker build is executed in
        type: string
      dockerfile:
        required: true
        description: Dockerfile location (relative to context)
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/navigatum-${{ inputs.image_suffix }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4
      - run: cp openapi.yaml data/output
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - uses: docker/setup-buildx-action@v3
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context }}
          push: true
          file: "${{ inputs.context }}/${{ inputs.dockerfile }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT_SHA=${{ github.sha }}
            GIT_COMMIT_MESSAGE="${github.event.head_commit.message//\n/}"
          cache-from: type=gha
          cache-to: type=gha,mode=min
      - name: Attest
        uses: actions/attest-build-provenance@v1
        id: attest
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
