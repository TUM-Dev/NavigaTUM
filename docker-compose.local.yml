services:
  webclient:
    restart: unless-stopped
    build: ./webclient
    ports:
      - "3000:3000"
    environment:
      NUXT_PUBLIC_MAPS_URL: https://nav.tum.de/maps
      NUXT_PUBLIC_CDN_URL: http://data:3002
      NUXT_PUBLIC_API_URL: http://main-api:3003
    depends_on:
      data:
        condition: service_healthy
      main-api:
        condition: service_healthy
  # cdn
  data:
    restart: unless-stopped
    build: ./data
    ports:
      - "3002:3002"
  # server
  main-api:
    restart: unless-stopped
    build: ./server
    command: /bin/navigatum-main-api
    ports:
      - "3003:3003"
    user: 1000:3000
    environment:
      LOG_LEVEL: ${LOG_LEVEL-debug}
      MIELI_URL: http://meilisearch:7700
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      TILESERVER_URL: https://nav.tum.de/maps
      CDN_URL: http://data:3002/cdn
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_URL: db:5432
      CONNECTUM_OAUTH_CLIENT_ID: ${CONNECTUM_OAUTH_CLIENT_ID}
      CONNECTUM_OAUTH_CLIENT_SECRET: ${CONNECTUM_OAUTH_CLIENT_SECRET}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      JWT_KEY: ${JWT_KEY}
    depends_on:
      meilisearch:
        condition: service_started
      db:
        condition: service_healthy
  meilisearch:
    image: getmeili/meilisearch:v1.9.0
    restart: unless-stopped
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_ENV: development
    healthcheck:
      test: curl --fail http://localhost:7700/health || exit 1
      retries: 5
      interval: 10s
      start_period: 10s
  db:
    image: postgis/postgis:16-3.4
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      retries: 5
      interval: 10s
      start_period: 10s
  osm2pgsql:
    image: iboates/osm2pgsql:latest
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    command:
      - replication
      - update
      - --database ${POSTGRES_DB}
      - --username ${POSTGRES_USER}
      - --host db
      - --port 5432
    depends_on:
      db:
        condition: service_healthy
  martin-init-config:
    image: alpine:latest
    command:
      - /bin/sh
      - /map/martin/setup.sh
    volumes:
      - ./map/:/map/
  martin:
    image: ghcr.io/maplibre/martin:v0.14.2
    restart: unless-stopped
    command:
      - --listen-addresses
      - 0.0.0.0:3001
      - --base-path
      - /
      - --config
      - /map/config.yaml
    ports:
      - "3001:3001"
    environment:
      - BASE_PATH=/
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
      martin-init-config:
        condition: service_completed_successfully
    volumes:
      - ./map/martin/:/map/:rw
