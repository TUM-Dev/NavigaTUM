openapi: 3.1.0
info:
  title: NavigaTUM
  description: |
    Navigating around TUM with excellence – An API to search for rooms,
    buildings and other places

    NavigaTUM is a tool developed by students for students, to help you get around at [TUM](https://tum.de). Feel free to contribute.

    Features:

    - Interactive or static maps to lookup the position of rooms or buildings
    - Fast and typo-tolerant search
    - Support for different room code formats as well as generic names

    All functionality is also available via an API.

    *Note: Not all buildings in NavigaTUM are owned by TUM, but are instead being used by TUM departments.*
  termsOfService: 'https://nav.tum.de/en/about/privacy'
  contact:
    name: TUM-Dev
    url: 'https://www.tum.app/'
    email: navigatum@tum.de
  license:
    name: GPL v3
    url: 'https://www.gnu.org/licenses/'
  version: 1.0.0
servers:
  - url: 'https://nav.tum.de'
    description: https
paths:
  /api/search:
    get:
      operationId: search
      summary: Search entries
      description: |
        This endpoint is designed to support search-as-you-type results.

        Instead of simply returning a list, the search results are returned in a way to provide a richer experience by splitting them up into sections. You might not necessarily need to implement all types of sections, or all sections features (if you just want to show a list). The order of sections is a suggested order to display them, but you may change this as you like.

        Some fields support highlighting the query terms and it uses \x19 and \x17 to mark the beginning/end of a highlighted sequence.  
        (See [Wikipedia](https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Modified_C0_control_code_sets)).  
        Some text-renderers will ignore them, but in case you do not want to use them, you might want to remove them from the responses via empty `pre_highlight` and `post_highlight` query parameters.
      parameters:
        - name: q
          in: query
          description: |
            string you want to search for.
            Note, that the amounts returned can be controlled using the limit\* paramerters.

            The following query-filters are supported:
            - `in:<parent>`: Only return rooms in the given parent (e.g. `in:5304` or `in:garching`)
              alternative syntax:
              - `@<parent>`
            - `usage:<type>`: Only return entries of the given usage (e.g. `usage:wc` or `usage:büro`)
               alternative syntax:
               - `nutzung:<usage>`
               - `=<usage>`
            - `type:<type>`: Only return entries of the given type (e.g. `type:building` or `type:room`)
          required: true
          schema:
            type: string
          examples:
            '5304':
              summary: A 'misspelled' (according to tumonline) lecture-hall
              value: mi hs1
            garching:
              summary: A misspelled campus
              value: sfarching
            fsmpi:
              summary: A regular room
              value: 5606.EG.036
            interims:
              summary: Lecture halls
              value: interims
            sv:
              summary: common name
              value: AStA
            none:
              summary: All rooms
              value: ''
        - name: limit_buildings
          in: query
          description: |
            Maximum number of buildings/sites to return.  
            Clamped to 0..1000. If this is an problem for you, please open an issue.
          schema:
            type: integer
            default: 5
            maximum: 1000
            minimum: 0
        - name: limit_rooms
          in: query
          description: |
            Maximum number of rooms to return.  
            Clamped to 0..1000. If this is an problem for you, please open an issue.
          schema:
            type: integer
            default: 10
            maximum: 1000
            minimum: 0
        - name: limit_all
          in: query
          description: |
            Overall maximum number of results. Only visible results are counted (i.e. hidden buildings are not counted).  
            Clamped to 1..1000. If this is an problem for you, please open an issue.
          schema:
            type: integer
            default: 10
            maximum: 1000
            minimum: 1
        - name: pre_highlight
          in: query
          description: |
            string to include in front of highlighted sequences.   
            If this and `post_highlight` are empty, highlighting is disabled.
          schema:
            type: string
            default: /u0019
            maxLength: 25
            minLength: 0
          examples:
            default:
              summary: 'The default value (See [Wikipedia](https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Modified_C0_control_code_sets)).'
              value: /u0019
            em:
              summary: A good alternative default value
              value: <em>
            ais-highlight:
              summary: Another good alternative
              value: <ais-highlight-00000000>
        - name: post_highlight
          in: query
          description: |
            string to include after the highlighted sequences.   
            If this and `pre_highlight` are empty, highlighting is disabled.
          schema:
            type: string
            default: /u0017
            maxLength: 25
            minLength: 0
          examples:
            default:
              summary: 'The default value (See [Wikipedia](https://en.wikipedia.org/wiki/C0_and_C1_control_codes#Modified_C0_control_code_sets)).'
              value: /u0017
            em:
              summary: A good alternative default value
              value: </em>
            ais-highlight:
              summary: Another good alternative
              value: </ais-highlight-00000000>
      responses:
        '200':
          description: The search-result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
              examples:
                mw:
                  value:
                    sections:
                      - facet: sites_buildings
                        entries:
                          - id: mw
                            type: joined_building
                            name: "Maschinenwesen (\x19MW\x17)"
                            subtext: Gebäudekomplex
                          - id: '5501'
                            type: building
                            name: 'Gebäudeteil 1, Institut für Mechatronik'
                            subtext: Gebäudeteil
                          - id: '5502'
                            type: building
                            name: 'Gebäudeteil 2, Institut für Werkstoffe und Verarbeitung'
                            subtext: Gebäudeteil
                          - id: '5503'
                            type: building
                            name: 'Gebäudeteil 3, Institut für Produktionstechnik'
                            subtext: Gebäudeteil
                        n_visible: 5
                        estimatedTotalHits: 20
                      - facet: rooms
                        entries:
                          - id: 5510.03.002
                            type: room
                            name: "5510.03.002 (\x19MW\x17 2001, Empore)"
                            subtext: Maschinenwesen (MW)
                            subtext_bold: 3002@5510
                          - id: 5510.01.004A
                            type: room
                            name: "5510.01.004A (Exp.-Bühne zu Hörsaal \x19MW\x17 2001)"
                            subtext: Maschinenwesen (MW)
                            subtext_bold: 1004a@5510
                          - id: 5502.01.250
                            type: room
                            name: 5502.01.250 (Hörsaal)
                            subtext: Maschinenwesen (MW)
                            subtext_bold: 1250@5502
                          - id: 5502.EG.250
                            type: room
                            name: 5502.EG.250 (Hörsaal)
                            subtext: Maschinenwesen (MW)
                            subtext_bold: 0250@5502
                          - id: 5503.EG.350
                            type: room
                            name: 5503.EG.350 (Egbert-von-Hoyer-Hörsaal)
                            subtext: Maschinenwesen (MW)
                            subtext_bold: 0350@5503
                        n_visible: 5
                        estimatedTotalHits: 3655
                    time_ms: 16
                nothing:
                  value:
                    sections:
                      - facet: sites_buildings
                        entries: []
                        n_visible: 0
                        estimatedTotalHits: 0
                      - facet: rooms
                        entries: []
                        n_visible: 0
                        estimatedTotalHits: 0
                    time_ms: 6
                interims-2:
                  value:
                    sections:
                      - facet: sites_buildings
                        entries:
                          - id: '5416'
                            type: building
                            name: "\x19Interims\x17hörsäle II, Jürgen Manchot-Hörsaalgebäude"
                            subtext: Gebäude
                        n_visible: 1
                        estimatedTotalHits: 1
                      - facet: rooms
                        entries:
                          - id: 5416.01.004
                            type: room
                            name: "5416.01.004 (Hörsaal 1 \"\x19Interims\x17 II\")"
                            subtext: 'Interimshörsäle II, Jürgen Manchot-Hörsaalgebäude'
                            subtext_bold: 004@5416
                          - id: 5416.01.003
                            type: room
                            name: "5416.01.003 (Hörsaal \x192\x17, \"\x19Interims\x17 II\")"
                            subtext: 'Interimshörsäle II, Jürgen Manchot-Hörsaalgebäude'
                            subtext_bold: 003@5416
                          - id: 5620.01.102
                            type: room
                            name: "56\x192\x170.01.10\x192\x17 (Hörsaal \x192\x17, \"\x19Interims\x17 I\")"
                            subtext: Interims-Audimax I
                            subtext_bold: "10\x192\x17@56\x192\x170"
                          - id: 5416.EG.010
                            type: room
                            name: 5416.EG.010 (IT/Audio)
                            subtext: 'Interimshörsäle II, Jürgen Manchot-Hörsaalgebäude'
                            subtext_bold: 010@5416
                        n_visible: 4
                        estimatedTotalHits: 23
                    time_ms: 23
        '400':
          description: Invalid Request
        '404':
          description: '`search_query` is empty. Since searching for nothing is nonsensical, we dont support this.'
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Not found
                enum:
                  - Not found
        '414':
          description: The uri you are trying to request is unreasonably long. Search querys dont have thousands of chars..
      tags:
        - core
  '/api/get/{id}':
    get:
      operationId: details
      summary: Get entry-details
      description: |
        This returns the full data available for the entry (room/building).

        This is more data, that should be supplied once a user clicks on an entry.
        Preloading this is not an issue on our end, but keep in mind bandwith constraints on your side.  
        The data can be up to 50kB (using gzip) or 200kB unzipped.
        The more about this data format is described in the NavigaTUM-data documentation
      parameters:
        - name: lang
          in: query
          description: 'The language you want your details to be in. If either this or the query parameter is set to en, this will be delivered.'
          required: false
          schema:
            type: string
            default: de
            enum:
              - de
              - en
        - name: id
          in: path
          description: string you want to search for
          required: true
          schema:
            type: string
          examples:
            '5304':
              summary: A normal building
              value: '5304'
            garching:
              summary: The garching campus
              value: garching
            mri:
              summary: The MRI campus
              value: garching
            mi:
              summary: 'A large, (custom named) building'
              value: mi
            mw:
              summary: 'An other large, (custom named) building'
              value: mw
            fsmpi:
              summary: A regular room
              value: 5606.EG.036
            rechnerhalle:
              summary: A room with custom props added
              value: 5605.EG.011
            tb-chemie:
              summary: A virtual room
              value: 5401.01.100A
            humangenetik:
              summary: A virtual room
              value: Gebäude 1543
      responses:
        '200':
          description: More data about the requested building/room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsResponse'
              examples:
                mi-hs-1:
                  value:
                    parent_names:
                      - Standorte
                      - Garching Forschungszentrum
                      - Fakultät Mathematik & Informatik (FMI oder MI)
                      - Hörsaal 1 (BT02)
                    id: 5602.EG.001
                    type: room
                    name: '5602.EG.001 (MI HS 1, Friedrich L. Bauer Hörsaal)'
                    parents:
                      - root
                      - garching
                      - mi
                      - '5602'
                    props:
                      calendar_url: 'https://campus.tum.de/tumonline/tvKalender.wSicht?cOrg=19691&cRes=12559&cReadonly=J'
                      operator:
                        code: TUZVZA4
                        name: Immobilien (ZA 4)
                        url: 'https://campus.tum.de/tumonline/webnav.navigate_to?corg=19691'
                        id: 19691
                      tumonline_room_nr: 12325
                      computed:
                        - name: Raumkennung
                          text: 5602.EG.001
                        - name: Architekten-Name
                          text: 00.02.001
                        - name: Stockwerk
                          text: Erdgeschoss
                        - name: Adresse
                          text: 'Boltzmannstr. 3, 85748 Garching b. München'
                    usage:
                      name: Hörsaal
                      din_277: NF5.1
                      din_277_desc: Unterrichtsräume mit festem Gestühl
                    sources:
                      base:
                        - name: TUMonline
                          url: 'https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/pl/ui/$ctx/wbRaum.editRaum?pRaumNr=12325'
                        - name: Roomfinder
                          url: 'https://portal.mytum.de/displayRoomMap?roomid=00.02.001@5602&disable_decoration=yes'
                    coords:
                      lat: 48.26244490906312
                      lon: 11.669122601167174
                      source: roomfinder
                    maps:
                      roomfinder:
                        available:
                          - scale: '500'
                            id: rf87
                            name: FMI Garching BT02 EG
                            width: 399
                            height: 487
                            x: 234
                            'y': 286
                            source: Roomfinder
                            file: rf87.webp
                          - scale: '2000'
                            id: rf142
                            name: FMI Übersicht
                            width: 639
                            height: 461
                            x: 499
                            'y': 189
                            source: Roomfinder
                            file: rf142.webp
                          - scale: '10000'
                            id: rf80
                            name: Lageplan Campus Garching
                            width: 676
                            height: 480
                            x: 340
                            'y': 334
                            source: Roomfinder
                            file: rf80.webp
                          - scale: '200000'
                            id: rf54
                            name: München
                            width: 640
                            height: 603
                            x: 444
                            'y': 35
                            source: Roomfinder
                            file: rf54.webp
                          - scale: '400000'
                            id: rf156
                            name: München und Umgebung
                            width: 420
                            height: 515
                            x: 265
                            'y': 167
                            source: Roomfinder
                            file: rf156.webp
                        default: rf87
                      overlays:
                        available:
                          - id: -1
                            floor: U1
                            file: mi_-1.webp
                            name: MI Gebäude (UG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 0
                            floor: EG
                            file: mi_0.webp
                            name: MI Gebäude (EG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 1
                            floor: '01'
                            file: mi_1.webp
                            name: MI Gebäude (1.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 2
                            floor: '02'
                            file: mi_2.webp
                            name: MI Gebäude (2.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 3
                            floor: '03'
                            file: mi_3.webp
                            name: MI Gebäude (3.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 4
                            floor: '04'
                            file: mi_4.webp
                            name: MI Gebäude (4.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                        default: 0
                      default: interactive
                    type_common_name: Hörsaal
                    ranking_factors:
                      rank_type: 100
                      rank_usage: 900
                      rank_combined: 900
                    aliases:
                      - 00.02.001@5602
                    redirect_url: /room/5602.EG.001
                5606.EG.036:
                  value:
                    parent_names:
                      - Standorte
                      - Garching Forschungszentrum
                      - Fakultät Mathematik & Informatik (FMI oder MI)
                      - Finger 06 (BT06)
                    name: 5606.EG.036 (Büro Fachschaft Mathe Physik Informatik Chemie / MPIC)
                    short_name: MPIC Büro
                    sources:
                      base:
                        - name: NavigaTUM
                        - name: TUMonline
                          url: 'https://campus.tum.de/tumonline/ee/ui/ca2/app/desktop/#/pl/ui/$ctx/wbRaum.editRaum?pRaumNr=55601'
                        - name: Roomfinder
                          url: 'https://portal.mytum.de/displayRoomMap?roomid=00.06.036@5606&disable_decoration=yes'
                    id: 5606.EG.036
                    type: room
                    parents:
                      - root
                      - garching
                      - mi
                      - '5606'
                    props:
                      operator:
                        code: TUVBMPI
                        name: Fachschaftsverbund Mathematik/Physik/Informatik/Chemie
                        url: 'https://campus.tum.de/tumonline/webnav.navigate_to?corg=45500'
                        id: 45500
                      tumonline_room_nr: 55601
                      computed:
                        - name: Raumkennung
                          text: 5606.EG.036
                        - name: Architekten-Name
                          text: 00.06.036
                        - name: Stockwerk
                          text: Erdgeschoss
                        - name: Adresse
                          text: 'Boltzmannstr. 3, 85748 Garching b. München'
                    usage:
                      name: Büro
                      din_277: NF2.1
                      din_277_desc: Büroräume
                    coords:
                      lat: 48.26217845031176
                      lon: 11.668693278105701
                      source: roomfinder
                    maps:
                      roomfinder:
                        available:
                          - scale: '500'
                            id: rf95
                            name: FMI Garching BT06 EG
                            width: 318
                            height: 605
                            x: 207
                            'y': 217
                            source: Roomfinder
                            file: rf95.webp
                          - scale: '2000'
                            id: rf142
                            name: FMI Übersicht
                            width: 639
                            height: 461
                            x: 443
                            'y': 242
                            source: Roomfinder
                            file: rf142.webp
                          - scale: '10000'
                            id: rf80
                            name: Lageplan Campus Garching
                            width: 676
                            height: 480
                            x: 329
                            'y': 344
                            source: Roomfinder
                            file: rf80.webp
                          - scale: '200000'
                            id: rf54
                            name: München
                            width: 640
                            height: 603
                            x: 444
                            'y': 36
                            source: Roomfinder
                            file: rf54.webp
                          - scale: '400000'
                            id: rf156
                            name: München und Umgebung
                            width: 420
                            height: 515
                            x: 265
                            'y': 167
                            source: Roomfinder
                            file: rf156.webp
                        default: rf95
                      overlays:
                        available:
                          - id: -1
                            floor: U1
                            file: mi_-1.webp
                            name: MI Gebäude (UG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 0
                            floor: EG
                            file: mi_0.webp
                            name: MI Gebäude (EG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 1
                            floor: '01'
                            file: mi_1.webp
                            name: MI Gebäude (1.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 2
                            floor: '02'
                            file: mi_2.webp
                            name: MI Gebäude (2.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 3
                            floor: '03'
                            file: mi_3.webp
                            name: MI Gebäude (3.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                          - id: 4
                            floor: '04'
                            file: mi_4.webp
                            name: MI Gebäude (4.OG) – © TUM WWW & Online Services
                            coordinates:
                              - - 11.666739
                                - 48.263478
                              - - 11.669666
                                - 48.263125
                              - - 11.669222
                                - 48.261585
                              - - 11.666331
                                - 48.261929
                        default: 0
                      default: interactive
                    type_common_name: Büro
                    ranking_factors:
                      rank_type: 100
                      rank_usage: 100
                      rank_combined: 100
                    aliases:
                      - 00.06.036@5606
                    redirect_url: /room/5606.EG.036
        '404':
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Not found
                enum:
                  - Not found
      tags:
        - core
  '/api/calendar/{id}':
    get:
      operationId: calendar
      summary: Retrieve Calendar Entries
      description: |
        Retrieves calendar entries for a specific `id` within the requested time span. 
        The time span is defined by the `start_after` and `end_before` query parameters.
        Ensure to provide valid date-time formats for these parameters.

        If successful, returns additional entries in the requested time span.
      parameters:
        - name: start_after
          in: query
          description: The first allowed time the calendar would like to display
          required: true
          schema:
            type: string
            format: date-time
          examples:
            use_tz:
              summary: how timezones are defined
              value: '2039-01-19T03:14:07+01:00'
            utc:
              summary: how utc is defined
              value: '2042-01-07T00:00:00 UTC'
        - name: end_before
          in: query
          description: The last allowed time the calendar would like to display
          required: true
          schema:
            type: string
            format: date-time
          examples:
            use_tz:
              summary: how timezones are defined
              value: '2039-01-19T03:14:07+01:00'
            utc:
              summary: how utc is defined
              value: '2042-01-07T00:00:00 UTC'
        - name: id
          in: path
          description: string you want to search for
          required: true
          schema:
            type: string
          examples:
            '5304':
              summary: A normal building
              value: '5304'
            root:
              summary: The root entry of the NavigaTUM-data
              value: root
            garching:
              summary: The garching campus
              value: garching
            mri:
              summary: The MRI campus
              value: garching
            mi:
              summary: 'A large, (custom named) building'
              value: mi
            mw:
              summary: 'An other large, (custom named) building'
              value: mw
            fsmpi:
              summary: A regular room
              value: 5606.EG.036
            rechnerhalle:
              summary: A room with custom props added
              value: 5605.EG.011
            tb-chemie:
              summary: A virtual room
              value: 5401.01.100A
            humangenetik:
              summary: A virtual room
              value: '1543'
      responses:
        '200':
          description: More entries of the calendar in the requested time span
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '404':
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Not found
                enum:
                  - Not found
        '503':
          description: 'Not Ready, please retry later'
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Waiting for first sync with TUMonline
                enum:
                  - Waiting for first sync with TUMonline
      tags:
        - core
  '/api/preview/{id}':
    get:
      operationId: previews
      summary: Get a entry-preview
      description: |
        This returns a 1200x630px preview for the location (room/building/..).

        This is usefully for implementing custom OpenGraph images for detail previews.
      parameters:
        - name: lang
          in: query
          description: 'The language you want your preview to be in. If either this or the query parameter is set to en, this will be delivered.'
          required: false
          schema:
            type: string
            default: de
            enum:
              - de
              - en
        - name: id
          in: path
          description: string you want to search for
          required: true
          schema:
            type: string
          examples:
            '5304':
              summary: A normal building
              value: '5304'
            garching:
              summary: The garching campus
              value: garching
            mri:
              summary: The MRI campus
              value: garching
            mi:
              summary: 'A large, (custom named) building'
              value: mi
            mw:
              summary: 'An other large, (custom named) building'
              value: mw
            fsmpi:
              summary: A regular room
              value: 5606.EG.036
            rechnerhalle:
              summary: A room with custom props added
              value: 5605.EG.011
            tb-chemie:
              summary: A virtual room
              value: 5401.01.100A
            humangenetik:
              summary: A virtual room
              value: '1543'
      responses:
        '200':
          description: More data about the requested building/room
          content:
            image/png: {}
        '404':
          description: Invalid input
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Not found
                enum:
                  - Not found
      tags:
        - maps
  /api/feedback/get_token:
    post:
      operationId: get_token
      summary: Get a feedback-token
      description: |
        ***Do not abuse this endpoint.***

        This returns a JWT token usable for submitting feedback.
        You should request a token, ***if (and only if) a user is on a feedback page***

        As a rudimentary way of rate-limiting feedback, this endpoint returns a token.
        To post feedback, you will need this token.

        Tokens gain validity after 5s, and are invalid after 12h of being issued.
        They are not refreshable, and are only valid for one usage.

        ***Important Note:*** 
        Global Rate-Limiting allows bursts with up to 20 requests and replenishes 50 requests per day
      responses:
        '201':
          description: Returns a usable token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '429':
          description: |
            Too many requests.  
            We are rate-limiting everyone's requests, please try again later.
        '503':
          description: |
            Service unavailable.  
            We have not configured a GitHub Access Token or a JWT Key.  
            This could be because we are experiencing technical difficulties or intentional if we experience abuse of these endpoints.
            Please try again later.
      tags:
        - feedback
  /api/feedback/feedback:
    post:
      operationId: post_feedback
      summary: Post feedback
      description: |
        ***Do not abuse this endpoint.***

        This posts the actual feedback to github and returns the github link.
        This API will create issues instead of pull-requests => all feedback is allowed, but `/api/feedback/propose_edit` is prefered, if it can be posted there.
        For this Endpoint to work, you need to generate a token via the `/api/feedback/get_token` endpoint.

        ***Important Note:*** Tokens are only used if we return a 201 Created response. Otherwise, they are still valid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFeedbackRequest'
      responses:
        '201':
          description: |
            The feedback has been successfully posted to GitHub.
            We return the link to the GitHub issue.
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - 'https://github.com/TUM-Dev/navigatum/issues/9'
        '400':
          description: If not all fields in the body are present as defined above
        '403':
          description: |
            Forbidden. Causes are (delivered via the body):

              - `Invalid token`: You have not supplied a token generated via the `gen_token`-Endpoint.
              - `Token not old enough, please wait`: Tokens are only valid after 10s.
              - `Token expired`: Tokens are only valid for 12h.
              - `Token already used`: Tokens are non reusable/refreshable single-use items.
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Invalid token
                  - 'Token not old enough, please wait'
                  - Token expired
                  - Token already used
        '422':
          description: |
            Unprocessable Entity
            Subject or body missing or too short.
        '451':
          description: |
            Unavailable for legal reasons.
            Using this endpoint without accepting the privacy policy is not allowed.
            For us to post to GitHub, this has to be true
        '500':
          description: |
            Internal Server Error.  
            We have a problem communicating with GitHubs servers. Please try again later.
        '503':
          description: |
            Service unavailable.  
            We have not configured a GitHub Access Token.  
            This could be because we are experiencing technical difficulties or intentional. Please try again later.
      tags:
        - feedback
  /api/feedback/propose_edit:
    post:
      operationId: propose_edit
      summary: Post Edit-Requests
      description: |
        ***Do not abuse this endpoint.***

        This posts the actual feedback to github and returns the github link.
        This API will create pull-requests instead of issues => only a subset of feedback is allowed.
        For this Endpoint to work, you need to generate a token via the `/api/feedback/get_token` endpoint.

        ***Important Note:*** Tokens are only used if we return a 201 Created response. Otherwise, they are still valid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProposeEditsRequest'
      responses:
        '201':
          description: |
            The feedback has been successfully posted to GitHub.
            We return the link to the GitHub issue.
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - 'https://github.com/TUM-Dev/navigatum/issues/9'
        '400':
          description: If not all fields in the body are present as defined above
        '403':
          description: |
            Forbidden. Causes are (delivered via the body):

              - `Invalid token`: You have not supplied a token generated via the `gen_token`-Endpoint.
              - `Token not old enough, please wait`: Tokens are only valid after 10s.
              - `Token expired`: Tokens are only valid for 12h.
              - `Token already used`: Tokens are non reusable/refreshable single-use items.
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - Invalid token
                  - 'Token not old enough, please wait'
                  - Token expired
                  - Token already used
        '422':
          description: |
            Unprocessable Entity
            Subject or body missing or too short.
        '451':
          description: |
            Unavailable for legal reasons.
            Using this endpoint without accepting the privacy policy is not allowed.
            For us to post to GitHub, this has to be true
        '500':
          description: |
            Internal Server Error.  
            We have a problem communicating with GitHubs servers. Please try again later.
        '503':
          description: |
            Service unavailable.  
            We have not configured a GitHub Access Token.  
            This could be because we are experiencing technical difficulties or intentional. Please try again later.
      tags:
        - feedback
  '/cdn/{size}/{id}_{counter}.webp':
    get:
      operationId: img_cdn
      summary: Get title images
      description: |
        This endpoint is designed to fetch the images, that are described by the `/api/get/{id}`-endpoint.
        You HAVE to get the proper attribution from that endpoint and use it.
      parameters:
        - name: size
          in: path
          description: |
            size of the resource you want

            | name   | default                                                               |
            |--------|-----------------------------------------------------------------------|
            | lg     | max 4k, aspect ratio untouched                                        |
            | md     | max 1920px, aspect ratio untouched                                    |
            | sm     | max 1024px, aspect ratio untouched                                    |
            | thumb  | 256x256, cropped to fit. Usually a center-crop, but sometimes offset. |
            | header | 512x210, cropped to fit. Usually a center-crop, but sometimes offset. |
          required: true
          schema:
            type: string
            enum:
              - lg
              - md
              - sm
              - thumb
              - header
        - name: id
          in: path
          description: id of the recource you want an image for
          required: true
          schema:
            type: string
          examples:
            '5304':
              summary: A normal building
              value: '5304'
            garching:
              summary: A campus
              value: garching
            mi:
              summary: 'A large, (custom named) building'
              value: mi
            fsmpi:
              summary: A regular room
              value: 5606.EG.036
        - name: counter
          in: path
          description: counter of the image you want.
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
            examples:
              - 0
              - 1
              - 2
      responses:
        '200':
          description: The image you requested
          content:
            image/webp: {}
        '400':
          description: |
            Bad Request.    
            The request was malformed.  
            Please check your request and try again.
        '404':
          description: Requested Resource Not Found
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Not found
                enum:
                  - Not found
        '414':
          description: 'The uri you are trying to request is unreasonably long. neither ids, nor any other parameter has more than 30 chars..'
      tags:
        - cdn
  '/cdn/maps/{source}/{id}.webp':
    get:
      operationId: maps_cdn
      summary: Get title images
      description: |
        This endpoint is designed to fetch the images, that are described by the `/api/get/{id}`-endpoint.
        You HAVE to get the proper attribution from that endpoint and use it.
      parameters:
        - name: source
          in: path
          description: source of the resource you want
          required: true
          schema:
            type: string
            enum:
              - overlay
              - roomfinder
        - name: id
          in: path
          description: id of the map you want
          required: true
          schema:
            type: string
            minLength: 1
          examples:
            rf142:
              summary: MI main overview (roomfinder only)
              value: rf142
            mi_0:
              summary: MI main overview (overlay only)
              value: mi_0
            garching:
              summary: StudiTUM Garching (roomfinder + overview)
              value: '5532_2'
      responses:
        '200':
          description: The map you requested
          content:
            image/webp: {}
        '400':
          description: |
            Bad Request.    
            The request was malformed.  
            Please check your request and try again.
        '404':
          description: Requested Resource Not Found
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - Not found
                enum:
                  - Not found
        '414':
          description: 'The uri you are trying to request is unreasonably long. neither ids, nor any other parameter has more than 30 chars..'
      tags:
        - cdn
  /api/status:
    get:
      operationId: api-health
      summary: API healthcheck
      description: |
        If this endpoint does not return 200, the API is experiencing a catastrophic outage. Should never happen.
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                examples:
                  - |
                    healthy
                    source code: https://github.com/TUM-Dev/navigatum/tree/8a0fb71819ac88c8af35683cfb46291f0d0c9b0a
        '503':
          description: Service Unavailable
      tags:
        - health
  /cdn/health:
    get:
      operationId: cdn-health
      summary: CDN healthcheck
      description: |
        If this endpoint does not return 200, the CDN is experiencing a catastrophic outage. Should never happen.
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - healthy
        '503':
          description: Service Unavailable
      tags:
        - health
  /health:
    get:
      operationId: web-health
      summary: Website healthcheck
      description: |
        If this endpoint does not return 200, the Website is experiencing a catastrophic outage. Should never happen.
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string
                enum:
                  - healthy
        '503':
          description: Service Unavailable
      tags:
        - health
components:
  schemas:
    Props:
      description: Data for the info-card table
      type: object
      properties:
        operator:
          description: The operator of the room
          type: object
          properties:
            code:
              description: The designation code of the operator
              type: string
              examples:
                - TUS7000
            name:
              description: |
                The full name of the operator (localized). Null for organisations that
                are no longer active (e.g. id=38698), but where the operator has not been
                updated in TUMonline.
              type:
                - string
                - 'null'
              examples:
                - TUM School of Social Sciences and Technology
            url:
              description: A link to the operator
              type: string
              examples:
                - 'https://campus.tum.de/tumonline/webnav.navigate_to?corg=51901'
            id:
              description: The id of the operator
              type: integer
              examples:
                - 51901
        computed:
          type: array
          items:
            $ref: '#/components/schemas/ComputedProp'
        links:
          type: array
          items:
            $ref: '#/components/schemas/LinkProp'
        comment:
          description: |
            A comment to show to an entry.  
            It is used in the rare cases, where some aspect about the rooom/.. or its translation are misleading.  
            An example of a room with a comment is MW1801.
          type: string
        calendar_url:
          description: A link to the calendar of the room
          type: string
          examples:
            - 'https://campus.tum.de/tumonline/tvKalender.wSicht?cOrg=19691&cRes=12543&cReadonly=J'
            - 'https://campus.tum.de/tumonline/tvKalender.wSicht?cOrg=19691&cRes=12559&cReadonly=J'
      required:
        - computed
    ComputedProp:
      type: object
      properties:
        name:
          type: string
          examples:
            - Raumkennung
        text:
          type: string
          examples:
            - 5602.EG.001
        extra:
          type: object
          properties:
            header:
              type: string
              examples:
                - Genauere Angaben
            body:
              type: string
              examples:
                - 'für Prüfungen: 102 in eng, 71 in weit, 49 in corona'
            footer:
              type: string
              examples:
                - data based on a Survey of chimneysweeps
          required:
            - body
      required:
        - name
        - text
    LinkProp:
      description: A link with a localized link text and url
      type: object
      properties:
        text:
          type: string
        url:
          type: string
      required:
        - text
        - url
    ImageInfo:
      description: 'The information you need to request Images from the /cdn/{size}/{id}_{counter}.webp endpoint'
      type: object
      properties:
        name:
          description: 'The name of the image file. consists of {building_id}_{image_id}.webp, where image_id is a counter starting at 0'
          type: string
          examples:
            - mi_0.webp
        author:
          $ref: '#/components/schemas/PossibleURLRef'
        source:
          $ref: '#/components/schemas/PossibleURLRef'
        license:
          $ref: '#/components/schemas/PossibleURLRef'
        meta:
          $ref: '#/components/schemas/ImageMetadata'
      required:
        - name
        - author
        - source
        - license
    ImageMetadata:
      description: |
        Aditional data about the images. Does not have to be displayed.
        All fields are optional.
      type: object
      properties:
        date:
          description: optional date description
          type: string
        location:
          description: optional location description
          type: string
        geo:
          description: 'optional coordinates in lat,lon'
          type: string
        image_url:
          description: |
            optional in contrast to source this points to the image itself.
            You should not use this to request the images, as they are not scaled.
          type: string
        caption:
          description: optional caption
          type: string
        headline:
          description: optional headline
          type: string
        event:
          description: optional the event this image was taken at
          type: string
        faculty:
          description: optional the event this image is about
          type: string
        building:
          description: optional the building this image is about
          type: string
        department:
          description: optional the department this image is about
          type: string
    PossibleURLRef:
      description: 'Additional information you should include, if you decide to display the image for legal and attribution reasons'
      type: object
      properties:
        text:
          description: The text to display
          type: string
        url:
          description: The URL to the referenced information. Always either null or a valid URL
          type:
            - string
            - 'null'
          pattern: .+
      required:
        - text
    Coordinate:
      type: object
      properties:
        lat:
          description: The latitude
          type: number
          format: double
          examples:
            - 48.26244490906312
          maximum: 90
          minimum: -90
        lon:
          description: The latitude
          type: number
          format: double
          examples:
            - 48.26244490906312
          maximum: 180
          minimum: -180
        source:
          description: The source of the Coordinates
          type: string
          examples:
            - roomfinder
            - navigatum
            - inferred
          enum:
            - roomfinder
            - navigatum
            - inferred
        accuracy:
          description: 'How accurate the coordinate is. Only present, if it is limited to a degree (e.g. we only know the building)'
          type: string
          examples:
            - building
          enum:
            - building
      required:
        - lat
        - lon
        - source
    Maps:
      type: object
      properties:
        default:
          description: The type of the Map that should be shown by default
          type: string
          enum:
            - interactive
            - roomfinder
          examples:
            - interactive
            - roomfinder
        roomfinder:
          $ref: '#/components/schemas/RoomfinderMap'
        overlays:
          description: |
            null would mean no overlay maps are displayed by default.
            For rooms you should add a warning that no floor map is available for this room
          type:
            - object
            - 'null'
          properties:
            default:
              description: |
                The floor-id of the map, that should be shown as a default.  
                null:
                - We suggest, you dont show a map by default.
                - This is only the case for buildings or other such entities and not for rooms, if we know where they are and a map exists
              type:
                - integer
                - 'null'
              examples:
                - 0
            available:
              type: array
              items:
                $ref: '#/components/schemas/OverlayMapEntry'
          required:
            - default
            - available
      required:
        - default
    RoomfinderMap:
      type: object
      properties:
        default:
          description: 'The id of the map, that should be shown as a default'
          type: string
          examples:
            - rf142
        available:
          type: array
          items:
            $ref: '#/components/schemas/RoomfinderMapEntry'
      required:
        - default
        - available
    RoomfinderMapEntry:
      type: object
      properties:
        name:
          description: The human-readable name of the map
          type: string
          examples:
            - FMI Übersicht
        id:
          description: The machine-readable name of the map
          type: string
          examples:
            - rf142
        scale:
          description: 'Scale of the map. 2000 means 1:2000.'
          type: string
          examples:
            - '2000'
          pattern: '[0-9]+'
        height:
          description: Map image x dimensions
          type: integer
          format: int32
          examples:
            - 461
          minimum: 0
        width:
          description: Map image y dimensions
          type: integer
          format: int32
          examples:
            - 639
          minimum: 0
        x:
          description: x Position on map
          type: integer
          format: int32
          examples:
            - 499
          minimum: 0
        'y':
          description: y Position on map image
          type: integer
          format: int32
          examples:
            - 189
          minimum: 0
        source:
          description: Where the map was imported from
          type: string
          examples:
            - Roomfinder
        file:
          description: Where the map is stored
          type: string
          examples:
            - rf93.webp
      required:
        - name
        - id
        - scale
        - height
        - width
        - x
        - 'y'
        - source
        - file
    OverlayMapEntry:
      type: object
      properties:
        id:
          description: |
            The machine-readable floor-id of the map.  
            Should start with 0 for the ground level (defined by the main entrance) and increase or decrease.
            It is not guaranteed that numbers are consecutive or that `1` corresponds to level `01`, because buildings sometimes have more complicated layouts. They are however always in the correct (physical) order.
          type: integer
          examples:
            - 0
        floor:
          description: |
            Floor of the Map.
            Should be used for display to the user in selectors.  
            Matches the floor part of the TUMonline roomcode.
          type: string
          examples:
            - EG
        name:
          description: The human-readable name of the map
          type: string
          examples:
            - MI Gebäude (EG)
        file:
          description: The filename of the map
          type: string
          examples:
            - webp/rf95.webp
        coordinates:
          description: 'Coordinates are four [lon, lat] pairs, for the top left, top right, bottom right, bottom left image corners.'
          type: array
          items:
            type: array
            items:
              type: number
            minItems: 2
            maxItems: 2
          maxItems: 4
          minItems: 4
      required:
        - id
        - floor
        - name
        - file
        - coordinates
    Rooms:
      type: object
      properties:
        facet:
          description: These indicate the type of item this represents
          type: string
          examples:
            - rooms
          enum:
            - rooms
        estimatedTotalHits:
          description: The estimated (not exact) number of hits for that query
          type: integer
          format: int64
          minimum: 0
        entries:
          type: array
          items:
            $ref: '#/components/schemas/RoomEntry'
        n_visible:
          description: |
            A recommendation how many of the entries should be displayed by default.  
            The number is usually from 0-20.  
            More results might be displayed when clicking "expand".  
            If this field is not present, then all entries are displayed.
          type: integer
          format: int64
          examples:
            - 20
          minimum: 0
      required:
        - n_visible
        - estimatedTotalHits
        - facet
        - entries
    SitesBuildings:
      type: object
      properties:
        facet:
          description: These indicate the type of item this represents
          type: string
          examples:
            - sites_buildings
          enum:
            - sites_buildings
        estimatedTotalHits:
          description: The estimated (not exact) number of hits for that query
          type: integer
          format: int64
          minimum: 0
        entries:
          type: array
          items:
            $ref: '#/components/schemas/SitesBuildingsEntry'
        n_visible:
          description: |
            A recommendation how many of the entries should be displayed by default.  
            The number is usually from 0-5.  
            More results might be displayed when clicking "expand".  
            If this field is not present, then all entries are displayed.
          type: integer
          format: int64
          examples:
            - 6
          minimum: 0
      required:
        - n_visible
        - estimatedTotalHits
        - facet
        - entries
    RoomEntry:
      type: object
      properties:
        id:
          description: The id of the room
          type: string
        type:
          description: the type of the room
          type: string
          examples:
            - room
          enum:
            - room
            - virtual_room
            - poi
        name:
          description: Subtext to show below the search result. Usually contains the context of where this rooms is located in. Currently not highlighted.
          type: string
        subtext:
          description: Subtext to show below the search result. Usually contains the context of where this rooms is located in. Currently not highlighted.
          type: string
        subtext_bold:
          description: 'Subtext to show below the search (by default in bold and after the non-bold subtext). Usually contains the arch-id of the room, which is another common room id format, and supports highlighting.'
          type: string
        parsed_id:
          description: 'This is an optional feature, that is only supported for some rooms. It might be displayed instead or before the name, to show that a different room id format has matched, that was probably used. See the image below for an example. It will be cropped to a maximum length to not take too much space in UIs. Supports highlighting.'
          type: string
      required:
        - id
        - type
        - name
        - subtext
        - subtext_bold
    SitesBuildingsEntry:
      type: object
      properties:
        id:
          description: The id of the room
          type: string
        type:
          description: the type of the site/building
          type: string
          examples:
            - campus
          enum:
            - campus
            - building
            - area
            - site
            - joined_building
        name:
          description: Subtext to show below the search result. Usually contains the context of where this rooms is located in. Currently not highlighted.
          type: string
        subtext:
          description: Subtext to show below the search result. Usually contains the context of where this rooms is located in. Currently not highlighted.
          type: string
      required:
        - id
        - type
        - name
        - subtext
    TokenResponse:
      type: object
      properties:
        token:
          description: 'The JWT token, that can be used to generate feedback'
          type: string
        created_at:
          description: Unix timestamp of when the token was created
          type: integer
          format: int64
      required:
        - token
        - created_at
      x-examples:
        token:
          token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2Njk2MzczODEsImlhdCI6MTY2OTU5NDE4MSwibmJmIjoxNjY5NTk0MTkxLCJraWQiOjE1ODU0MTUyODk5MzI0MjU0Mzg2fQ.sN0WwXzsGhjOVaqWPe-Fl5x-gwZvh28MMUM-74MoNj4
          created_at: 1629564181
    SearchResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/SitesBuildings'
              - $ref: '#/components/schemas/Rooms'
            discriminator:
              propertyName: facet
              mapping:
                sites_buildings: SitesBuildings
                rooms: Rooms
        time_ms:
          description: |
            Time the search took in the server side, not including network delay
            Maximum as timeout. other timeouts (browser, your client) may be smaller
            Expected average is 10..50 for uncached, regular requests
          type: integer
          format: int32
          examples:
            - 42
          maximum: 75000
          minimum: 0
      required:
        - sections
        - time_ms
    DetailsResponse:
      type: object
      properties:
        id:
          description: 'The id, that was requested'
          type: string
        type:
          description: The type of the entry
          type: string
          enum:
            - room
            - building
            - joined_building
            - area
            - site
            - campus
            - poi
        type_common_name:
          description: The type of the entry in a human-readable form
          type: string
        name:
          description: The name of the entry in a human-readable form
          type: string
          examples:
            - '5602.EG.001 (MI HS 1, Friedrich L. Bauer Hörsaal)'
        aliases:
          description: |
            A list of alternative ids for this entry.  

            Not to be confused with
            - `id` which is the unique identifier or
            - `visual-id` which is an alternative identifier for the entry (only displayed in the URL).
          type: array
          items:
            type: string
            examples:
              - 26503@5406
        parents:
          type: array
          items:
            type: string
            description: The ids of the parents. They are ordered as they would appear in a Breadcrumb menu. See parent_names for their actual ids.
          examples:
            - root
            - garching
        parent_names:
          type: array
          items:
            type: string
            description: The ids of the parents. They are ordered as they would appear in a Breadcrumb menu. See parents for their actual ids.
          examples:
            - Standorte
            - Garching Forschungszentrum
          minItems: 1
          uniqueItems: true
        props:
          $ref: '#/components/schemas/Props'
        imgs:
          type: array
          items:
            $ref: '#/components/schemas/ImageInfo'
        ranking_factors:
          $ref: '#/components/schemas/RankingFactors'
        sources:
          $ref: '#/components/schemas/DataSources'
        redirect_url:
          description: |
            The url, this item should be displayed at.
            Present on both redirects and normal entries, to allow for the common /view/:id path
          type: string
          examples:
            - /room/5602.EG.001
        coords:
          $ref: '#/components/schemas/Coordinate'
        maps:
          $ref: '#/components/schemas/Maps'
        sections:
          type: object
          properties:
            buildings_overview:
              $ref: '#/components/schemas/BuildingsOverview'
            rooms_overview:
              $ref: '#/components/schemas/RoomsOverview'
            featured_overview:
              $ref: '#/components/schemas/FeaturedOverview'
        poi:
          type: object
          properties:
            mvg:
              type: array
              items:
                $ref: '#/components/schemas/Station'
              minItems: 1
              uniqueItems: true
          required:
            - mvg
      required:
        - id
        - type
        - coords
        - maps
        - type_common_name
        - name
        - parents
        - parent_names
        - props
        - ranking_factors
        - sources
        - redirect_url
    BuildingsOverview:
      type: object
      properties:
        entries:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ChildEntry'
              - type: object
                properties:
                  subtext:
                    description: What should be displayed below this Building
                    type: string
                    examples:
                      - Gebäudekomplex mit 512 Räumen
                  thumb:
                    description: The thumbnail for the building
                    type: string
                    examples:
                      - mi_0.webp
                required:
                  - subtext
        n_visible:
          description: |
            A recommendation how many of the entries should be displayed by default.  
            The number is usually from 0-5.  
            More results might be displayed when clicking "expand".  
            If this field is not present, then all entries are displayed.
          type: integer
          format: int64
          examples:
            - 5
          minimum: 0
      required:
        - entries
        - n_visible
    RoomsOverview:
      type: object
      properties:
        usages:
          type: array
          items:
            type: object
            properties:
              name:
                description: Category Name
                type: string
                examples:
                  - Büro
              count:
                description: How many children this category has
                type: integer
                examples:
                  - 126
                minimum: 0
              children:
                type: array
                items:
                  $ref: '#/components/schemas/ChildEntry'
            required:
              - children
              - count
              - name
    FeaturedOverview:
      type: object
      properties:
        entries:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ChildEntry'
              - type: object
                properties:
                  subtext:
                    description: What should be displayed below this Building
                    type: string
                    examples:
                      - Gebäudekomplex mit 512 Räumen
                  image_url:
                    description: The thumbnail for the building
                    type: string
                    examples:
                      - mi_0.webp
                required:
                  - subtext
                  - image_url
      required:
        - entries
    ChildEntry:
      type: object
      properties:
        id:
          description: The id of the entry
          type: string
          examples:
            - mi
        name:
          description: Human display name
          type: string
          examples:
            - Mathematik / Informatik
      required:
        - id
        - name
    CalendarResponse:
      type: object
      properties:
        events:
          description: The entries of the requested
          type: array
          items:
            $ref: '#/components/schemas/CalendarEntry'
        last_sync:
          description: When the last sync with TUMonline happened.
          type: string
          format: date-time
          examples:
            - '2018-01-01T00:00:00'
        calendar_url:
          description: 'Link to the same calendar, but in TUMonline'
          type: string
          examples:
            - 'https://campus.tum.de/tumonline/wbKalender.wbRessource?pResNr=12543'
          pattern: 'https:\/\/campus\.tum\.de\/tumonline\/wbKalender\.wbRessource\?pResNr=[0-9]+'
      required:
        - events
        - last_sync
        - calendar_url
    CalendarEntry:
      type: object
      properties:
        id:
          description: The id of the calendar entry used in TUMonline internally
          type: integer
          format: int32
          examples:
            - 42
        title:
          description: The title of the Entry
          type: string
          examples:
            - Quantenteleportation
        start:
          description: The start of the entry
          type: string
          format: date-time
          examples:
            - '2018-01-01T00:00:00'
        end:
          description: The end of the entry
          type: string
          format: date-time
          examples:
            - '2018-01-01T00:00:00'
        entry_type:
          description: What this calendar entry means. Each of these should be displayed in a different color
          type: string
          enum:
            - lecture
            - exercise
            - exam
            - barred
            - other
        detailed_entry_type:
          description: 'For some Entrys, we do have more information (what kind of a `lecture` is it? What kind of an other `entry` is it?)'
          type: string
          examples:
            - Vorlesung mit Zentralübung
      required:
        - id
        - title
        - start
        - end
        - entry_type
        - detailed_entry_type
    DataSources:
      description: 'Where we got our data from, should be displayed at the bottom of any page containing this data'
      type: object
      properties:
        patched:
          description: |
            Was this entry patched by us? (e.g. to fix a typo in the name/...)
            If so, we should not display the source, as it is not the original source.
          type: boolean
        base:
          description: What is the basis of the data we have
          type: array
          items:
            type: object
            minProperties: 1
            properties:
              name:
                description: The name of the provider
                type: string
                examples:
                  - NavigaTUM
              url:
                description: The url of the provider
                type: string
                examples:
                  - 'https://nav.tum.de'
            required:
              - name
      required:
        - base
    RankingFactors:
      type: object
      properties:
        rank_combined:
          description: How much the combined ranking is important
          type: integer
          format: int32
        rank_type:
          description: How much the type is important
          type: integer
          format: int32
        rank_usage:
          description: How much the usage is important
          type: integer
          format: int32
        rank_boost:
          description: |
            Automatic boost or suppression based on entry properties:
            - numbers of buildings for a `campus`/`area`/`site`,
            - numbers of seats for a `room`,
            - number of regular rooms for a `building`/`joined_building`
          type: integer
          format: int32
        rank_custom:
          description: Custom boost or suppression factor defined by us
          type: integer
          format: int32
      required:
        - rank_combined
        - rank_type
        - rank_usage
    ProposeEditsRequest:
      allOf:
        - $ref: '#/components/schemas/TokenRequest'
        - type: object
          properties:
            edits:
              description: 'The edits to be made to the room. The keys are the ID of the props to be edited, the values are the proposed Edits.'
              type: object
              additionalProperties:
                type: object
                properties:
                  coordinate:
                    type: object
                    properties:
                      lat:
                        type: number
                        format: double
                      lon:
                        type: number
                        format: double
                    required:
                      - lat
                      - lon
                  image:
                    type: object
                    properties:
                      metadata:
                        type: object
                        properties:
                          author:
                            type: string
                          license:
                            $ref: '#/components/schemas/LinkProp'
                          source:
                            $ref: '#/components/schemas/LinkProp'
                          offsets:
                            type: object
                            properties:
                              header:
                                type: integer
                                format: int32
                              thumb:
                                type: integer
                                format: int32
                          meta:
                            type: object
                            additionalProperties:
                              type: string
                        required:
                          - author
                          - license
                          - source
                      content:
                        description: The image encoded as base64
                        format: byte
                        type: string
                    required:
                      - metadata
                      - content
            additional_context:
              description: |
                Additional context for the edit.  
                Will be displayed in the discription field of the PR
              type: string
              examples:
                - 'I have a picture of the room, please add it to the roomfinder'
          required:
            - edits
            - additional_context
    PostFeedbackRequest:
      allOf:
        - $ref: '#/components/schemas/TokenRequest'
        - type: object
          properties:
            category:
              description: |-
                The category of the feedback.  
                Enum attribute is softly enforced: Any value not listed below will be replaced by "other"
              type: string
              examples:
                - bug
              enum:
                - bug
                - feature
                - search
                - entry
                - general
                - other
            subject:
              description: The subject/title of the feedback
              type: string
              examples:
                - A catchy title
              maxLength: 512
              minLength: 4
            body:
              description: The body/description of the feedback
              type: string
              examples:
                - A clear description what happened where and how we should improve it
              maxLength: 1048576
              minLength: 4
            deletion_requested:
              description: |
                Whether the user has requested to delete the issue.
                If the user has requested to delete the issue, we will delete it from GitHub after processing it
                If the user has not requested to delete the issue, we will not delete it from GitHub and it will remain as a closed issue.
              type: boolean
              examples:
                - true
          required:
            - category
            - subject
            - body
            - deletion_requested
    TokenRequest:
      type: object
      properties:
        token:
          description: 'The JWT token, that can be used to generate feedback'
          type: string
          examples:
            - eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2Njk2MzczODEsImlhdCI6MTY2OTU5NDE4MSwibmJmIjoxNjY5NTk0MTkxLCJraWQiOjE1ODU0MTUyODk5MzI0MjU0Mzg2fQ.sN0WwXzsGhjOVaqWPe-Fl5x-gwZvh28MMUM-74MoNj4
        privacy_checked:
          description: Whether the user has checked the privacy-checkbox. We are posting the feedback publicly on GitHub (not a EU-Company). You have to also include such a checkmark.
          type: boolean
          examples:
            - true
      required:
        - token
        - privacy_checked
    Station:
      type: object
      properties:
        distance:
          type: number
          format: double
          exclusiveMinimum: 0
        station_id:
          type: string
        name:
          type: string
        lat:
          type: number
          format: double
        lon:
          type: number
          format: double
        sub_stations:
          type: array
          items:
            type: object
            properties:
              station_id:
                type: string
              name:
                type: string
              lat:
                type: number
                format: double
              lon:
                type: number
                format: double
            required:
              - station_id
              - name
              - lat
              - lon
      required:
        - distance
        - station_id
        - name
        - lat
        - lon
        - sub_stations
      x-examples:
        Example 1:
          distance: 264.3434461761658
          station_id: 'de:09184:2051'
          name: 'Oberschleißh., Regattaanlage'
          lat: 48.2526907440601
          lon: 11.5246215288662
          sub_stations:
            - station_id: 'de:09184:2051:0:1'
              name: 'Oberschleißh., Regattaanlage'
              lat: 48.2526129857745
              lon: 11.5251605180367
            - station_id: 'de:09184:2051:0:2'
              name: 'Oberschleißh., Regattaanlage'
              lat: 48.2528223347355
              lon: 11.5240016913201
tags:
  - name: core
    description: the API to access/search for room information
  - name: maps
    description: Maps related functionality
  - name: cdn
    description: Images for some of the rooms
  - name: feedback
    description: the API to access/search for room information
  - name: health
    description: These endpoints are used to check the health of our components
externalDocs:
  description: Visit our Github Page for more in-depth documentation
  url: 'https://github.com/TUM-Dev/navigatum'
$schema: 'http://json-schema.org/draft-07/schema#'