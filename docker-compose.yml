services:
  webclient:
    image: ghcr.io/tum-dev/navigatum-webclient:main
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-webclient.entrypoints=webs"
      - "traefik.http.routers.navigatum-webclient.tls.certresolver=leacme"
      - "traefik.http.routers.navigatum-webclient.rule=Host(`nav.tum.de`)"
      - "traefik.http.services.navigatum-webclient.loadbalancer.server.port=3000"
    networks:
      - traefik_traefik
    expose:
      - "3000"
    environment:
      NUXT_PUBLIC_MAPS_URL: https://nav.tum.de
      NUXT_PUBLIC_CDN_URL: https://nav.tum.de
      NUXT_PUBLIC_API_URL: https://nav.tum.de
    depends_on:
      tileserver:
        condition: service_healthy
      data:
        condition: service_healthy
      main-api:
        condition: service_healthy
  # maps
  tileserver-init-config:
    image: alpine:latest
    command:
      - /bin/sh
      - -c
      - |
        rm -f /data/*.json
        cp /map/*.json /data/
        
        rm -fr /data/sprites/
        mkdir -p /data/sprites/
        cp /map/sprites/* /data/sprites/
        
        rm -fr /data/styles/
        mkdir -p /data/styles/
        cp /map/styles/* /data/styles/
        
        mkdir -p /data/fonts/
    volumes:
      - tileserver-src:/data
      - ./map/:/map/:ro
  tileserver-srv-src: # needed for simpler initialisation of dev environments
    image: nginx:1.27
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-tileserver-srv.entrypoints=webs"
      - "traefik.http.routers.navigatum-tileserver-srv.tls.certresolver=leacme"
      - "traefik.http.routers.navigatum-tileserver-srv.rule=Host(`nav.tum.de`) && PathPrefix(`/maps/vol/`)"
      - "traefik.http.services.navigatum-tileserver-srv.loadbalancer.server.port=80"
    networks:
      - traefik_traefik
    expose:
      - 80
    volumes:
      - tileserver-src:/usr/share/nginx/html/maps/vol:ro
    depends_on:
      tileserver-init-config:
        condition: service_completed_successfully
    healthcheck:
      test: service nginx status || exit 1
      retries: 2
      interval: 10s
      start_period: 10s
  tileserver:
    image: maptiler/tileserver-gl:v4.11.1
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-tileserver.entrypoints=webs"
      - "traefik.http.routers.navigatum-tileserver.tls.certresolver=leacme"
      - "traefik.http.routers.navigatum-tileserver.rule=Host(`nav.tum.de`) && PathPrefix(`/maps/`)"
      - "traefik.http.routers.navigatum-tileserver.middlewares=navigatum-stripprefix@docker, navigatum-compress@docker, navigatum-cache-2m@docker"
      - "traefik.http.middlewares.navigatum-stripprefix.stripprefix.prefixes=/maps"
      - "traefik.http.middlewares.navigatum-compress.compress=true"
      - "traefik.http.middlewares.navigatum-cache-2m.headers.customrequestheaders.Cache-Control=public, max-age=5184000"
      - "traefik.http.services.navigatum-tileserver.loadbalancer.server.port=8080"
    networks:
      - traefik_traefik
    expose:
      - "8080"
    command: /usr/src/app/docker-entrypoint.sh --public_url=https://nav.tum.de/maps/
    tmpfs:
      - /tmp
    volumes:
      - tileserver-src:/data/:ro
    read_only: true
    depends_on:
      tileserver-init-config:
        condition: service_completed_successfully
  # cdn
  data:
    image: ghcr.io/tum-dev/navigatum-data:main
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-data.entrypoints=webs"
      - "traefik.http.routers.navigatum-data.tls.certresolver=leacme"
      - "traefik.http.routers.navigatum-data.rule=Host(`nav.tum.de`) && PathPrefix(`/cdn/`)"
      - "traefik.http.services.navigatum-data.loadbalancer.server.port=3002"
    networks:
      - traefik_traefik
    expose:
      - "3002"
  # server
  main-api:
    image: ghcr.io/tum-dev/navigatum-server:main
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-main-api.entrypoints=webs"
      - "traefik.http.routers.navigatum-main-api.tls.certresolver=leacme"
      - "traefik.http.routers.navigatum-main-api.rule=Host(`nav.tum.de`) && (PathPrefix(`/api/get/`) || Path(`/api/search`) || Path(`/api/status`) || PathPrefix(`/api/preview/`) || PathPrefix(`/api/feedback/`) || Path(`/api/calendar`))"
      - "traefik.http.services.navigatum-main-api.loadbalancer.server.port=3003"
    networks:
      - traefik_traefik
    expose:
      - "3003"
    command: /bin/navigatum-main-api
    user: 1000:3000
    environment:
      MIELI_URL: http://meilisearch:7700
      TILESERVER_URL: http://tileserver:8080
      CDN_URL: http://data:3002/cdn
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_URL: db:5432
      CONNECTUM_OAUTH_CLIENT_ID: ${CONNECTUM_OAUTH_CLIENT_ID}
      CONNECTUM_OAUTH_CLIENT_SECRET: ${CONNECTUM_OAUTH_CLIENT_SECRET}
      GITHUB_TOKEN: ${GITHUB_TOKEN}
      JWT_KEY: ${JWT_KEY}
    depends_on:
      meilisearch:
        condition: service_healthy
      db:
        condition: service_healthy
  meilisearch:
    image: getmeili/meilisearch:v1.8.3
    restart: unless-stopped
    networks:
      - traefik_traefik
    expose:
      - "7700"
    healthcheck:
      test: wget -q --spider http://localhost:7700/health
      retries: 5
      interval: 10s
      start_period: 10s
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - traefik_traefik
    expose:
      - "5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      retries: 5
      interval: 10s
      start_period: 10s
  redirect-domain:
    image: "traefik/whoami:latest"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-redirect-domain.entrypoints=webs"
      - "traefik.http.routers.navigatum-redirect-domain.tls.certresolver=leacme"
      - "traefik.http.routers.navigatum-redirect-domain.rule=Host(`www.nav.tum.de`) || Host(`nav.tum.sexy`)"
      - "traefik.http.routers.navigatum-redirect-domain.middlewares=navigatum-redirect-to-domain@docker"
      - "traefik.http.middlewares.navigatum-redirect-to-domain.redirectregex.regex=^https://(www.)?nav.tum.(de|sexy)/(.*)"
      - "traefik.http.middlewares.navigatum-redirect-to-domain.redirectregex.replacement=https://nav.tum.de/$${3}"
      - "traefik.http.middlewares.navigatum-redirect-to-domain.redirectregex.permanent=true"
      - "traefik.http.services.navigatum-redirect-domain.loadbalancer.server.port=80"
  redirect-https:
    image: "traefik/whoami:latest"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.navigatum-redirect-https.entrypoints=web"
      - "traefik.http.routers.navigatum-redirect-https.rule=Host(`nav.tum.de`) || Host(`www.nav.tum.de`) || Host(`nav.tum.sexy`)"
      - "traefik.http.routers.navigatum-redirect-https.middlewares=navigatum-redirect-to-https@docker"
      - "traefik.http.middlewares.navigatum-redirect-to-https.redirectregex.regex=^https?://(www.)?nav.tum.(de|sexy)/(.*)"
      - "traefik.http.middlewares.navigatum-redirect-to-https.redirectregex.replacement=https://nav.tum.de/$${3}"
      - "traefik.http.middlewares.navigatum-redirect-to-https.redirectregex.permanent=true"
      - "traefik.http.services.navigatum-redirect-https.loadbalancer.server.port=80"

volumes:
  tileserver-src:
    driver: local
  postgres-data:
    driver: local

networks:
  traefik_traefik:
    external: true
