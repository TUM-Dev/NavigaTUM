{
  "db_name": "PostgreSQL",
  "query": "\n    WITH max_version(max_import_version) AS (SELECT MAX(import_version) FROM indoor_features i2),\n     geometry(gid, geom, tags) AS (SELECT way_id AS gid, geom, tags\n                                   FROM indoor_ways\n                                   UNION\n                                   DISTINCT\n                                   SELECT area_id AS gid, geom, tags\n                                   FROM indoor_polygons\n                                   UNION\n                                   DISTINCT\n                                   SELECT node_id AS gid, geom, tags\n                                   FROM indoor_nodes),\n     geometry_in_lat_lon(gid, geom, tags) AS (SELECT gid, ST_Transform(geom, 4326), tags FROM geometry),\n     -- clustered to within about ~20m of non-overlapping distance\n     clustered_geometry(gid, group_id, geom, tags)\n         AS (SELECT gid,\n                    ST_ClusterWithinWin(geom, 0.0001) OVER () AS group_id,\n                    geom,\n                    tags\n             FROM geometry_in_lat_lon),\n     clustered_features(group_id, features, geom) AS (SELECT group_id,\n                                                       jsonb_build_object(\n                                                               'type', 'Feature',\n                                                               'id', gid,\n                                                               'geometry', ST_AsGeoJSON(geom)::jsonb,\n                                                               'properties', tags\n                                                       ) || CASE WHEN tags->>'highway'='steps'\n                                                        THEN '{\"lineMetrics\":true}'::jsonb\n                                                        ELSE '{}'::jsonb END,\n                                                       geom\n                                                FROM clustered_geometry),\n     grouped_features(group_id, features, convex_hull) AS (SELECT group_id,\n                                                                  jsonb_agg(features),\n                                                                  ST_ConvexHull(ST_Collect(array_agg(geom)))::geometry\n                                                           FROM clustered_features\n                                                           GROUP BY group_id\n                                                           ORDER BY group_id)\n\nINSERT\nINTO indoor_features(group_id, features, convex_hull, import_version)\nSELECT group_id, jsonb_build_object('type', 'FeatureCollection','features', features), convex_hull, COALESCE(max_import_version,-1) + 1\nFROM grouped_features, max_version\n",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": []
    },
    "nullable": []
  },
  "hash": "271669d3919aa65952c81a19320718f027a095fd9593c22ee2cc1effe925fe2f"
}
