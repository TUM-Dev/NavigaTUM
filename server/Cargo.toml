[package]
name = "navigatum-server"
version = "1.0.0"
authors = ["Markus A <ge75sig@mytum.de>", "Frank Elsinga <frank@elsinga.de>"]
edition = "2021"
description = "Navigating around TUM with excellence â€“ An API and website to search for rooms, buildings and other places"
repository = "https://github.com/TUM-Dev/navigatum"
readme = "README.md"
license = "GPL-3.0"
keywords = ["website", "navigation", "api-rest", "tum"]
default-run = "navigatum-server"

[[bin]]
name = "navigatum-server"
path = "src/main.rs"

[dependencies]
# logging/obeservability
actix-web-prom = { version = "0.8.0", default-features = false, features = [] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json", "fmt"] }
tracing = "0.1.40"
tracing-log = { version = "0.2.0", features = ["std", "log-tracer", "interest-cache"] }
tracing-actix-web = "0.7.11"
sentry = { version = "0.34.0", features = ["tracing", "metrics", "backtrace", "contexts", "debug-images", "panic", "reqwest", "rustls"] }
sentry-actix = "0.34.0"

# errors 
anyhow = { version = "1.0.86", features = ["backtrace"] }

#serialisation
serde = { version = "1.0.200", features = ["derive"] }
serde_json = { version = "1.0.116", features = ["raw_value"] }
serde_yaml = "0.9.34"

# runtime + webserver
tokio = { version = "1.37", default-features = false, features = ["rt-multi-thread", "time", "sync", "process"] }
actix-web = { version = "4.5.1", default-features = false, features = ["compress-brotli", "compress-gzip", "compress-zstd", "cookies", "http2", "macros"] }
actix-cors = "0.7.0"
rustls = { version = "0.23.5", default-features = false, features = ["ring"] } # the aws' fips complient libary has weird bingen issues which require deeper looking into

cached = { version = "0.53.0", features = ["default", "async", "disk_store"] }
futures = "0.3.30"
unicode-truncate = "1.1.0"

# database
sqlx = { version = "0.8.0", features = ['chrono', 'json', 'macros', 'migrate', 'postgres', 'runtime-tokio', 'tls-rustls'], default-features = false }
chrono = { version = "0.4.38", default-features = false, features = ["serde"] }

# search
meilisearch-sdk = "0.27.0"
logos = "0.14.0"
regex = "1.10.4"

# web access
oauth2 = { version = "4.4.2", default-features = false, features = ["rustls-tls", "reqwest"] }
reqwest = { version = "0.12.4", default-features = false, features = ["gzip", "hickory-dns", "http2", "json", "rustls-tls"] }

# image production
image = { version = "0.25.1", default-features = false, features = ["jpeg", "png", "webp"] }
imageproc = "0.25.0"
ab_glyph = { version = "0.2.25", default-features = false }
lazy_static = "1.4.0"

rand = "0.8.5"
octocrab = { version = "0.39.0", default-features = false, features = ["default-client", "retry", "rustls", "rustls-webpki-tokio"] }

# auth/security
jsonwebtoken = { version = "9.3.0", default-features = false, features = [] }
actix-governor = { version = "0.5.0", features = ["logger"] }

# proposing feedback
tempfile = "3.10.1"
base64 = "0.22.1"
time = "0.3.36"
polars = { version = "0.41.3", features = ["dtype-struct", "parquet"] }
#polars = { git = "https://github.com/CommanderStorm/polars.git", branch = "serialisation-experiment", features = ["parquet", "serde", "dtype-full"] }

[dev-dependencies]
insta = { version = "1.39.0", features = ["json", "redactions", "yaml"] }
pretty_assertions = "1.4.0"
testcontainers = { version = "0.21.0", features = ["watchdog"] }
testcontainers-modules = { version = "0.9.0", features = ["meilisearch", "postgres"] }
tracing-test = "0.2.5"


[profile.release]
strip = false
lto = false

# Enable max optimizations for some dependencies, but not for our code
# nessesary to get acceptable performance out of the image processing code
[profile.dev.package.image]
opt-level = 3

[profile.dev.package.imageproc]
opt-level = 3

[profile.dev.package.ab_glyph]
opt-level = 3

# https://github.com/launchbadge/sqlx?tab=readme-ov-file#compile-time-verification
[profile.dev.package.sqlx-macros]
opt-level = 3

# https://insta.rs/docs/quickstart/
[profile.dev.package]
insta.opt-level = 3
similar.opt-level = 3

[package.metadata.cargo-machete]
ignored = [
    "rustls", # we need to configure between ring and aws crypto library
]

[features]
test-with-geodata = []