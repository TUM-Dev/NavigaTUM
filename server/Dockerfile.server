# Compile
FROM    rust:alpine3.14 AS compiler

RUN     apk add -q --update-cache --no-cache build-base openssl-dev sqlite-dev

WORKDIR /nav
COPY    ./Cargo.* ./
COPY    ./src ./src
RUN     RUSTFLAGS="-C target-feature=-crt-static" cargo build --release


# Build the details database
FROM python:3.10.7-bullseye as build-stage
COPY    load_api_data_to_db.py load_api_data_to_db.py

# get api_data.json
ADD     https://nav.tum.sexy/cdn/api_data.json data/api_data.json
# For local testing if navigatum is not available:
# follow the data-docs to get api_data.json, copy it to the directory server/data and enable
# COPY data/api_data.json data/api_data.json
RUN     python3 load_api_data_to_db.py

# RUN
FROM alpine:3.16.2

RUN     apk update --quiet \
        && apk add -q --no-cache libgcc sqlite-libs tini curl


# add `navigatum-server` to the `/bin` so we can run it from anywhere and it's easy to find.
COPY    --from=build-stage /data/api_data.db ./data/api_data.db
COPY    --from=compiler /nav/target/release/navigatum-server /bin/navigatum-server

ARG     GIT_COMMIT_SHA
ENV     GIT_COMMIT_SHA=${GIT_COMMIT_SHA}

EXPOSE  8080

ENTRYPOINT ["tini", "--"]
HEALTHCHECK --start-period=20m  --timeout=10s CMD curl --fail localhost:8080/api/health || exit 1
CMD     /bin/navigatum-server
